#+TITLE: My Guix Channel Playground

To use this channel, put =$HOME/.config/guix/channels.scm= the following:

#+BEGIN_EXAMPLE
(cons (channel
       (name 'guix-channel-hebi)
       (url "https://github.com/lihebi/guix-channel.git")
       (branch "master"))
      %default-channels)
#+END_EXAMPLE

* Nvidia Driver

- https://github.com/Millak
- https://github.com/rekado

rekado
- https://github.com/BIMSBbioinfo/guix-bimsb-nonfree

Nvidia
- https://git.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/nvidia

pkill9's guix config and packages:
- https://miha.info/guix-fhs-service/
- https://gitlab.com/pkill-9
- https://gitlab.com/pkill-9/guix-config
- https://gitlab.com/pkill-9/guix-packages-nonfree
- https://gitlab.com/pkill-9/guix-packages-free

Nix:
- https://github.com/NixOS/nixpkgs/tree/bd6ba87381ef6274a830253b60e481209d4d7c7d/pkgs/os-specific/linux/nvidia-x11

Arch PKGBUILD:
- nvidia driver https://www.archlinux.org/packages/extra/x86_64/nvidia/
- cuda https://www.archlinux.org/packages/community/x86_64/cuda/

Looks like I have to have:
1. ldconfig
2. /lib64/ld.xxx
3. /usr/include
4. linux kernel tree

The linux-libre-headers is not enough. I need the kernel source tree.

** Nix

#+begin_example
 libname_short=`echo -n "$libname" | sed 's/so\..*/so/'`

      if [[ "$libname" != "$libname_short" ]]; then
        ln -srnf "$libname" "$libname_short"
      fi

      if [[ $libname_short =~ libEGL.so || $libname_short =~ libEGL_nvidia.so || $libname_short =~ libGLX.so || $libname_short =~ libGLX_nvidia.so ]]; then
          major=0
      else
          major=1
      fi

      if [[ "$libname" != "$libname_short.$major" ]]; then
        ln -srnf "$libname" "$libname_short.$major"
      fi`*'`
#+end_example

** TODO amdgpu?
OpenCL vs. Cuda

** more references
- read guix service https://guix.gnu.org/manual/en/html_node/Defining-Services.html#Defining-Services
- custom kernel https://guix.gnu.org/blog/2019/creating-and-using-a-custom-linux-kernel-on-guix-system/
- packaing tutorail https://guix.gnu.org/blog/2018/a-packaging-tutorial-for-guix/
- nvidia installer source: https://download.nvidia.com/XFree86/nvidia-installer/

** DONE patchelf all .so and bins
   CLOSED: [2019-09-13 Fri 16:56]
so that I don't need:

#+begin_example
export LD_LIBRARY_PATH=/home/hebi/.guix-profile/lib:/usr/lib:$LD_LIBRARY_PATH
#+end_example

** DONE validate the patchelf using dll
   CLOSED: [2019-09-13 Fri 16:56]
- libx11
- all .so files
** DONE enable validation phase
   CLOSED: [2019-09-13 Fri 16:56]
** TODO if I manually load kernel, can I start X
There is only one error:

#+begin_example
[  7383.840] (WW) Falling back to old probe method for modesetting
#+end_example

This error probably isn't important. I need to test if nouveau also has this error.

I think the problem is due to my xwrapper, the Xorg probably works,
but it is not starting a proper WM?  I would try gdm.

** TODO load kernel module automatically
LINUX_MODULE_DIRECTORY, I don't think it is possible. How Nix did it?
** TODO load module manually at system startup
- before X tries to load it
- as a service?

** DONE generate a script for loading kernel modules
   CLOSED: [2019-09-14 Sat 18:33]
** TODO test whether I can use cuda
If the I finally cannot make the Xorg work

** (2017 GPCE) Code staging in GNU Guix

#+begin_example
@article{courtes2017code,
  title={Code staging in GNU Guix},
  author={Court{\`e}s, Ludovic},
  journal={ACM SIGPLAN Notices},
  volume={52},
  number={12},
  pages={41--48},
  year={2017},
  publisher={ACM}
}
#+end_example
